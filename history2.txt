./vmware-install.pl 
sudo ./vmware-install.pl 
lsb_release -a
cp -ra /etc/apt/sources.list /etc/apt/sources.list.bak
chmod 777 sources.list
sudo chmod 777 sources.list
sudo apt-get update
sudo apt-get upgrade
unzip 12397.shell-extension.zip 
chmod 777 ./
ls
mkdir dash-to-dock@micxgx.gmail.com
sudo apt-get install -y gnome-tweaks gnome-shell-extensions gnome-tweak-tool
sudo apt-get autoremove --purge gnome-shell-extension-ubuntu-dock -y
wget https://extensions.gnome.org/review/download/12397.shell-extension.zip
ls
mkdir .local/share/gnome-shell/extensions/
chmod 777 ./
sudo ./vmware-install.pl 
reboot
x-special/nautilus-clipboard
copy
file:///media/my/VMware%20Tools/VMwareTools-10.0.5-3228253.tar.gz
sudo vmware-uninstall-tools.pl
sudo apt-get remove open-vm-tools
sudo apt-get remove --auto-remove open-vm-tools
sudo apt-get purge --auto-remove open-vm-tools
sudo ./vmware-install.pl
sudo apt-get install open-vm-tools
reboot
sudo ./vmware-install.pl
ifconig
ifconfig
sudo apt install net-tools
ifconfig
sudo apt install open-vm-tools-dektop -y
reboot
sudo ./vmware-install.pl
reboot
ls
rm -rf Inverse-pink
rm -f Inverse-pink.tar.xz 
sudo apt install openssh-server
sudo systemctl status ssh
ifconfig
rm -rf Inverse-pink/
chmod 777 ./
sudo chmod 777 ./
sudo add-apt-repository ppa:snwh/pulp
x-special/nautilus-clipboard
copy
file:///home/my/.local/share/icons/Inverse-pink
sudo apt install open-vm-tools
x-special/nautilus-clipboard
copy
file:///home/my/.local/share/icons/Inverse-pink
sudo apt uninstall open-vm-tools
cd /usr/bin
ls
sudo vmware-uninstall-tools.pl 
sudo rm -rvf /usr/lib/vmware-caf/
sudo apt autoremove open-vm-tools --purge
sudo dpkg -i google-chrome-stable_current_amd64.deb 
sudo apt-get -f install
rm -rf VMwareTools-10.0.5-3228253
tar -zxvf VMwareTools-10.0.5-3228253.tar.gz 
cd vmware-tools-distrib/
sudo ./vmware-install.pl
go
docker --version
node
sudo apt install nodejs
node -v
sudo apt  install golang-go
python -v
python --version
python2 
sudo apt install python2
python2 
python
python2 -v
python2 -V
ls /usr/bin/python*
python3
docker
sudo apt install docker.io
docker --version
docker version
sudo groupadd docker
sudo usermod -aG docker my
sudo vim /etc/docker/daemon.json
sudo apt install vim
sudo vim /etc/docker/daemon.json
docker version
sudo chmod -R 777 /var/run/docker.sock
docker version
python -V
python2 -m pip install docker-compose
sudo apt install python-pip
sudo apt install python2-pip
pip install docker-compose
python2 -m pip install --upgrade pip
python3 -m pip install docker-compose
sudo apt update
sudo apt install python2-pip
sudo apt install python3-pip
pip
pip3
pip3 install docker-compose
docker-compose -version
docker-compose --version
docker-compose -version
sudo apt  install docker-compose
docker-compose -version
git
go
ls
mkdir fabric
cd fabric/
git https://github.com/hyperledger/fabric-samples.git
git clone https://github.com/hyperledger/fabric-samples.git
git brach -a
git branch -a
cd fabric-samples/
git branch -a
/usr/bin/python3 /home/my/.vscode/extensions/ms-python.python-2020.9.114305/pythonFiles/pyvsc-run-isolated.py pip install -U pylint --user
man rename
rename python3 python python3
sudo apt install rename
rename python3 python python3
man rename
sudo chmod 777 python3
sudo update-alternatives --config python
sudo update-alternatives --install /usr/bin/python python /usr/bin/python2 100
sudo update-alternatives --install /usr/bin/python python /usr/bin/python3 150
sudo update-alternatives --config python
python
code
java
sudo apt-get install python-software-properties
sudo apt install software-properties-common
sudo add-apt-repository ppa:webupd8team/java
sudo apt-get install oracle-java8-installer
sudo apt-get install openjdk-14-jdk
java
gccc
g++
gcc
-s my
ls
cd CODE/
ls
cd Test/
ls
-s hello
vi if.sh
./ if.sh 
./ if.sh aa
./if.sh aa
vi if.sh 
./if.sh aa
sh if.sh 
./if.sh aa
sudo ./if.sh
./if.sh abc
sh if.sh abc
vi if.sh 
sh if.sh abc
vi if.sh 
./if.sh
chmod u+x if.sh 
./if.sh
./if.sh hello
./if.sh wzq
touch wzq
ll
vi wzq 
chmod u+x wzq 
./wzq
./if.sh wzq
vi for.sh
chmod u+x for.sh 
./for.sh
vi for.sh
./for.sh
vi for.sh 
./for.sh
vi for.sh 
./for.sh
vi for.sh 
./for.sh
vi for.sh 
./for.sh
vi for.sh 
./for.sh
sh for.sh 
./for.sh
vi for.sh 
./for.sh
vi for.sh 
./for.sh
vi for.sh 
./for.sh
vi for.sh 
./for.sh
vi for.sh 
./for.sh
vi func.sh
chmod u+x func.sh 
./func.sh wzq
./func.sh my
echo GOPATH
echo $GOPATH
env
go get
ls
cd $GOPATH
ls
cd go
ls
cd src/
cd github.com/
cd hyperledger/
cd fabric/
ls
cd -
ls
cd scripts/
ls
cd fabric-samples/
ls
cd fabcar/
ls
./startFabric.sh 
npm config get config
npm config get registry
cd java
cd ..
cd javascript/
ls
node query.js 
node enrollAdmin.js 
node registerUser.js 
node query.js 
node invoke.js 
node query.js 
node invoke.js 
vi /etc/profile
peer
exit
node invoke.js 
cd ..
./startFabric.sh -h
./startFabric.sh javascript
ls
cd java
cd ..
cd javascript/
ls
node enrollAdmin.js 
node registerUser.js 
node query.js 
ls
cd java
cd ..
cd javascript/
ls
node query.js 
cd ..
./startFabric.sh 
./startFabric.sh javascript
cd java
cd ..
cd javascript/
node enrollAdmin.js 
node registerUser.js 
node query.js 
code ./
docker ps | grep db
ll
./vmware-install.pl 
sudo ./vmware-install.pl 
cd ..
Ls
ls
cd ..
c ..
cd ..
ls
cd fabcar/
ls
./startFabric.sh javascript
cd javascript/
ls
node enrollAdmin.js 
node registerUser.js 
node query.js 
cd ..
./startFabric.sh 
./startFabric.sh javascript
cd javascript/
ls
node enrollAdmin.js 
node registerUser.js 
node query.js 
node invoke.js 
node q
node query.js 
node invoke.js 
node query.js 
doker ps
docker ps
docker ps | grep db
ls
node q
node query.js 
ls
cd ..
ls
chmod +x networkMonitor.sh 
./networkMonitor.sh 
cd fabcar/
ls
cd javascript/
ls
node invoke.js 
reboot
ls
exit
ssh-keygen
cd~/.ssh
cd ~/.ssh
ls
cat id_rsa.pub >> authorized_keys
chmod 600 authorized_keys
chmod 700 ~/.ssh
vi /etc/ssh/sshd_config
sudo vi /etc/ssh/sshd_config
ifconfig
service sshd restart
sudo vi /etc/ssh/sshd_config
ifconfig
ssh my@192.168.190.130
vi /etc/ssh/sshd_config
cd ..
chmod 700 .ssh/
chmod 600 .ssh/authorized_keys 
ssh-copy-id
service sshd restart
ifconfig
sudo vi /etc/ssh/sshd_config
cd .ssh
ls
cat known_hosts 
cat authorized_keys 
chmod 600 ~/.ssh/*
sudo vi /etc/ssh/sshd_config
service sshd restart
sudo vi /etc/ssh/sshd_config
service sshd restart
sudo vi /etc/ssh/sshd_config
ping 192.168.190.1
ping 192.168.43.126
exit
ll
ls
l
ls
sl
sls
ls
sl
ls
l
ls
l
ls
l
ls
lsls
sl
s
ls
lsls
slsls
sl
l
slsl
sl
slls
sls
ls
sl
sls
l
sls
ssl
sls
l
s
ls
l
s
l
ls
l
ll
l
ll
l
ll
l
ll
l
ll
l
lll
l
ll
l
lll
l
ll
l
ll
l
ll
l
ll
l
ll
lll
ll
l
ll
lll
ll
l
ll
l
exit
npm init -y
git init
ls
sudo apt-get install redis-server
echo "gem: --no-document" >> ~/.gemrc
gem
sudo snap instsall ruby
sudo snap install ruby
sudo snap install ruby --classic
gem install rails
sudo apt install g
sudo apt install ./google-chrome-stable_current_amd64.deb 
sudo vi /etc/apt/sources.list
gem install rails
yarn
rails -v
rails
gem install rails -v 6.1.3
rails -v
ls
cd ..
ls
mkdir rails 
ls
cd rails
ls
gem install bundler
source <(curl -sL https://cdn.learnenough.com/yarn_install)
yarn\
npm
yarn -v
curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -
sudo apt update && sudo apt install yarn
sudo apt update
sudo apt update && sudo apt install yarn
npm install yarn -g
sudo npm i yarn -g
root
su
su root
sudo password
su passwd
sudo passwd
su root
gpg --keyserver hkp://pool.sks-keyservers.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3 7D2BAF1CF37B13E2069D6956105BD0E739499BDB
curl -sSL https://get.rvm.io | bash
curl -sSL https://get.rvm.io | bash -s stable --ruby
nvm -v
clear
rvm --version
rvm install ruby3.0.0
rvm install ruby
rvm autolibs disable
rvm install 2.4.0
rvm list
rvm install 2.7.0
clear
rvm install 2.6.3
rvm use 2.6.3
sudo rvm use 2.6.3
rvm use 2.6.3
bash --login
rvm use
rvm use 2.6.3
clear
rail -v
clear
sudo gem install rails
gem --version
sudo gem install rails -v 6.1.3
gem --help
rvm list
sudo apt-get gem
sudo apt-get install  gem
clear
sudo apt-get update
apt-secure
\curl -sSL https://get.rvm.io | bash -s stable --rails
gpg2 --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3 7D2BAF1CF37B13E2069D6956105BD0E739499BDB
\curl -sSL https://get.rvm.io | bash -s stable --rails
vi /home/my/.rvm/log/1624865427_ruby-3.0.0/update_system.log
ping google.com
wget google.com
ls
rm -f index.html 
ls
sudo apt-get update
sudo apt-get upgrade
sudo gem install rails -v 6.1.3
gem install rails -v 6.1.3
clear
gem --version
gem -v
sudo apt install ruby
ruby -v
gem install rails -v 6.1.3
sudo gem install rails -v 6.1.3
rails --version
sudo apt-get install rubygems
ruby setup.rb
rails --version
echo "gem: --no-document" >> ~/.gemrc
sudo gem install rails -v 6.1.3
sudo apt-get install ruby-dev
sudo gem install rails -v 6.1.3
rails --version
gem install bundler -v 2.2.13
sudo gem install bundler -v 2.2.13
ruby -v
yarn -v
cd rails/
rails new hello_app
sudo rails new hello_app
sudo bundle install
bundle install
gnome-system-monitor 
sudo apt-get install libsqlite3-dev
ls
rm -rf hello_app/
sudo rm -rf hello_app/
rails _6.1.3_ new hello_app
ls
cd hello_app/
ll
code ./
bundle install
rails server
ruby -v
ifconfig
git
git config user.name
git config user.email
git init
git add .
git status
git commit -m 'Initialize repository'
git log
ls app/controllers/
rm -rf app/controllers/
ls
ls app/controllers
git status
git restore -f
git checkout -f
ls
ls app/controllers/
ls
rails server
cd ..
rails _6.1.3_ new toy_app
git commt -a -m 'change the ruby version'
git commit -a -m 'change the ruby version'
git push
git commit -a -m 'change the ruby version'
git push
bundle _2.2.13_ config set --local without 'production'
bundle _2.2.13_ install
git commit -a -m 'roll back the ruby version'
git push
git add .
git commit -m 'modify the bin/bundle file‘
'
git commit -m 'replace the gemfile'
git commit -a -m 'replace the gemfile'
git push
git commit -a -m 'replace the gemfile'
git add .
git commit -m 'replace the gemfile'
git push
bundle _2.2.13_ config set --local without 'production'
bundle _2.2.13_ install
git commit -a -m "Update Gemfile for Heroku"
bundle _2.2.13_ config set --local without 'production'
bundle _2.2.13_ install
bundle update
git commit -a -m "Update Gemfile for Heroku"
git push
code html/
sqlite3 development.sqlite3 
first_user.microposts
bundle _2.2.13_ config set --local without 'production'
bundle _2.2.13_ install
bundle update
sudo apt-get install libpq-dev
bundle update
gem install pg
sudo gem install pg
bundle update
git init
git add -A
git commit -m 'Init the repository'
git branch -M main
git push -u origin main
git commit -am "Add hello"
heroku create
heroku stack:set heroku-18
git push && git push heroku main
git commit -am "change for deploy"
git push && git push heroku main
bundle _2.2.13_ config set --local without 'production'
bundle _2.2.13_ install
rails server
bundle exec guard init
cd CODE/
cd ruby/
ls
cd //
ls
cd home/
ls
cd my/
ls
cd rails/
ls
cd sample_app/
ls
rails test
mv layout_file app/views/layouts/application.html.erb
rails test
git add -A
git commit -m 'Finish static pages'
git checkout master
git checkout main
get merge static-pages
git merge static-pages
git commit -am 'finish ageain'
git merge static-pages
git push
rails test
git push heroku
git branch -a
rails test
top
htop
sudo snap install htop
htop
bundle exec guard init
gem install rufo
sudo gem install rufo
rufo -v
furo --help
rufo --help
rufo Guardfile 
echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf
sudo sysctl -p
bundle _2.2.13_ exec guard
git add -A
git status
git commit -m 'Complete advanced testing setup"
'
git push
git checkout -b rails-flavored-ruby
rails test
vi ~/.irbc
rails console
exit
code ./
exit
rails test
mv app/views/layouts/application.html.erb layout_file
rails test
sails serve
rails serve
rails server
rails console
rm example_user.rb 
ls
git commit -am "Add a full_title helper"
git checkout master
git checkout main
get merge rails-flavored-ruby
git merge rails-flavored-ruby
rails test
bundle _2.2.13_ exec guard
sudo rails test
git push
git push heroku
git checkout -b filling-in-layout
curl -o app/assets/images/rails.svg -L https://cdn.learnenough.com/rails.svg
curl -OL https://cdn.learnenough.com/kitten.jpg
mv kitten.jpg app/assets/images/
sudo bundle install
touch app/assets/stylesheets/custom.scss
rails serve
rails server
sudo rails server
node -v
n
n -h
n --lts
n lts
sudo n lts
n
sudo n
n lts
sudo lts
sudo n lts
n -h
sudo --lts
n --lts
sudo n rm 14.17.3
n
sudo n lts
node -v
n
sudo n
node -v
sudo n rm 12.19.0
node
sudo n
node -v
ls
htop
node
node -v
sudo n
npm -v
git clone https://github.com/vinceliuice/WhiteSur-gtk-theme.git
npm start
nodemon main.js 
npm i nodemon -g
sudo npm i nodemon -g
nodemon -v
exit
npm start
code ./
code electron-demo/
cd electron-demo/
npm i -D electron@latest
npm init
htop
git clone https://github.com/ethereum/go-ethereum.git
bootnode --genkey=boot.key
geth --datadir=./data --bootnodes=enode://328140091254d411a121afa3d7eadc90ecdfa6edecdcca8e5d15e21f4ceaf7f811462ac36974961b7431eb45547cffb2f6176b94eccaabbc12951a99b7c9b444@127.0.0.1:0?discport=30301
gem install jekyll
gem sources
gem sources -a http://mirrors.aliyun.com/rubygems/ 
gem sources
gem sources -r https://rubygems.org/
gem sources -u
gem sources
gem install bundler jekyll
gem install jekyll
gem sources -a https://mirrors.aliyun.com/rubygems/
gem sources
gem sources -r http://mirrors.aliyun.com/rubygems/
gem sources
gem sources -u
gem install bundler jekyll
sudo gem install jekyll
jeklly new blog
jekyll
jekyll new blog
cd blog/
bundle exec jekyll serve
sudo dpkg -i google-chrome-stable_current_amd64\ \(1\).deb 
ifconifg
ifconfig
code ./
bundle install
bundle exec jekyll serve
jekyll build
ruby -v
bundle exec jekyll serve --livereload
bundle exec jekyll serve --help
bundle exec jekyll serve -l -H 192.168.190.133
cd ~/.ssh
ls
vi id_rsa.pub 
history 
